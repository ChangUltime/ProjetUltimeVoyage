<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">


<context:property-placeholder location="classpath*:ds.properties"/>

<bean id="dataSourceBean" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="${jdbc.driver}"/>
	<property name="url" value="${jdbc.url}"/>
	<property name="username" value="${jdbc.user}"/>
	<property name="password" value="${jdbc.mdp}"/>
</bean>


<!-- Configuration de la partie autorisation -->
<security:http>
	<!-- Proteger les url et les autoriser juste pour admin -->
	
	<security:intercept-url pattern="/agent/**" access="ROLE_AGENT"/>
	<security:intercept-url pattern="/client/**" access="ROLE_CLIENT"/>
	
	<!-- Generation d'un formulaire de connection basique en cas de tentative d'accès -->
<!-- 	<security:http-basic/> -->
	<!-- Utilisatil de la balise form-login pour utiliser un formulaire personnalisé -->
	<security:form-login login-page="/login" login-processing-url="/commonLogin" authentication-failure-url="/loginEchec"/>
	
	<!-- Specifier l'URL à appeler en cas d'accès refusé -->
	<security:access-denied-handler error-page="/loginEchec"/>
	
	<security:logout logout-success-url="/logout" invalidate-session="true" logout-url="/commonLogout"/>
	
	
	
</security:http>



<!-- Configuration de la partie authentification -->
<security:authentication-manager>
	<security:authentication-provider>
		<!-- La balise user-service sert à déclarer les users en dur dans le fichier de config -->
<!-- 		<security:user-service> -->
<!-- 			<security:user name="pinkie" password="p" authorities="ROLE_ADMIN"/> -->
<!-- 			<security:user name="apple" password="a" authorities="ROLE_EMPL"/> -->
<!-- 		</security:user-service> -->
		<!-- Utilisation d'une base de données pour vérifier l'authentification -->
		<security:jdbc-user-service data-source-ref="dataSourceBean"
			users-by-username-query="SELECT identifiant,mdp,true FROM (SELECT identifiant,mdp,true FROM agents UNION SELECT identifiant,mdp,true FROM clients) as users WHERE identifiant=?"
			authorities-by-username-query="SELECT * FROM (SELECT a.identifiant,'ROLE_AGENT' FROM agents a UNION SELECT c.identifiant,'ROLE_CLIENT' FROM clients c) as roles WHERE identifiant=?"
		/>
	</security:authentication-provider>
</security:authentication-manager>

</beans>
